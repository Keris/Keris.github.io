[{"authors":["admin"],"categories":null,"content":"我是杜利强，现在是友信金服科技有限公司的一名软件工程师，曾在新浪微博担任搜索算法工程师，在诺禾致源担任生物信息软件开发工程师。我的兴趣包括互联网金融风控、信息检索排序、推荐系统。\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"zh","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://keris.github.io/zh/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/zh/authors/admin/","section":"authors","summary":"我是杜利强，现在是友信金服科技有限公司的一名软件工程师，曾在新浪微博担任搜索算法工程师，在诺禾致源担任生物信息软件开发工程师。我的兴趣包括互联网金融风控、信息检索排序、推荐系统。","tags":null,"title":"杜利强","type":"authors"},{"authors":["杜利强"],"categories":["机器学习"],"content":"目录  术语  Logistic function Odds Logit function   逻辑回归  代价函数求导     术语 逻辑回归涉及到以下术语：\n Logistic function Odds Logit  Logistic function 逻辑回归中的 Logistic 正是出于 Logistic function ，它是一种 sigmoid function ，其接受任意实值，输出一个0到1之间的值。 标准的 logistic funtion 定义如下：\n$$\\sigma(z) = \\frac{e^z}{e^z + 1} = \\frac{1}{1 + e^{-z}}$$\n如下是它在区间$[-6, 6]$之间的图像：\n\n在逻辑回归中，我们使用对数几率（log odds），并假定它是输入特征的线性组合：\n$$z = \\ln \\frac{p(x)}{1 - p(x)}= \\theta_0 + \\theta_1 x_1 + \\theta_2 x_2 = \\theta^T \\cdot x$$\n由上式我们可以得到，\n$$p(x) = \\sigma(z) = \\frac{1}{1 + e^{-\\theta^T \\cdot x}}$$\n在逻辑回归模型中，这里的 $p(x)$ 为因变量在成功情形下的概率，即 $p(y=1 \\mid x)$。\nOdds 如果 $p$ 表示一个事件发生的概率，那么odds定义为\n$$\\text{odds} = \\frac{p}{1 - p}$$ 也就是说，odds为发生的概率除以不发生的概率，亦可以说为成功的概率除以失败的概率。\nLogit function Logit为Log odds, logit function 定义为 logistic function的逆，即 $g = \\sigma^{-1}$。显而易见，我们有\n$$g(p(x)) = \\sigma_{-1}(p(x)) = \\text{logit}\\,p(x) = \\ln(\\frac{p(x)}{1 - p(x)}) = \\theta^T \\cdot x$$\n逻辑回归 逻辑回归是一个重要的机器学习算法，其目标是基于给定的数据$x$输出随机变量$y$为0或1的概率。\n考虑由$\\theta$参数化的线性模型，\n$$h_\\theta(x) = \\frac{1}{1 + e^{-\\theta^T \\cdot x}} = \\text{Pr}(y = 1 \\mid x;\\theta)$$\n从而，$\\text{Pr}(y=0 \\mid x;\\theta) = 1 - h_\\theta(x)$。\n因为$y \\in \\{0, 1 \\}$，我们有\n$$\\text{Pr}(y \\mid x;\\theta) = h_\\theta(x)^y (1 - h_\\theta(x))^{1 - y} $$\n似然函数为\n$$\\begin{aligned} L(\\theta \\mid x) \u0026amp;= \\Pr(Y\\mid X;\\theta) \\\\\n\u0026amp;= \\prod_i \\Pr(y^{(i)} \\mid x^{(i)};\\theta) \\\\\n\u0026amp;= \\prod_i h_\\theta(x^{(i)})^{y^{(i)}}(1-h_\\theta(x^{(i)}))^{1-y^{(i)}} \\end{aligned}$$\n一般地，我们最大化对数似然函数，\n$$\\log L(\\theta \\mid x) = \\sum_{i=1}^{m}\\log \\Pr(y^{(i)} \\mid x^{(i)};\\theta)$$\n定义代价函数如下：\n$$J(\\theta) = -\\frac{1}{m} \\log L(\\theta \\mid x) = -\\frac{1}{m} \\sum_i^m (y^{(i)} \\log h_\\theta(x^{(i)}) + (1 - y^{(i)})(1 - h_\\theta(x^{(i)})))$$\n容易看到，我们最大化对数似然函数就是最小化代价函数 $J(\\theta)$。在机器学习中，我们使用梯度下降最小化代价函数。\n代价函数求导 下面我们对代价函数$J(\\theta)$对$\\theta$进行求导，我们先考虑在一个样本上的代价函数\n$$J_1(\\theta) = -y \\log h_\\theta(x) - (1 - y)(1 - h_\\theta(x))$$\n现在对$J_1(\\theta)$对$\\theta$进行求导：\n注意到$\\frac{d\\sigma(z)}{dz} = \\sigma(z) (1 - \\sigma(z))$, 我们有\n$$\\begin{aligned}\\frac{\\partial}{\\partial \\theta_j} J_1(\\theta) \u0026amp;= -y \\frac{1}{h_\\theta(x)} h_\\theta(x) (1 - h_\\theta(x)) x_j - (1 - y) \\frac{1}{1 - h_\\theta(x)} (-1) h_\\theta(x) (1 - h_\\theta(x)) x_j \\\\ \u0026amp;= (h_\\theta(x) - y) x_j\\end{aligned} $$\n有了以上结果，我们有\n$$\\frac{\\partial}{\\partial \\theta_j} J(\\theta) = \\frac{1}{m}\\sum_i^m [h_\\theta(x^{(i)}) - y^{(i)}]x_j^{(i)}$$\n","date":1578991642,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1579496437,"objectID":"aebccbb495f02050f938f27e4bd41ef9","permalink":"https://keris.github.io/zh/post/logistic-regression/","publishdate":"2020-01-14T16:47:22+08:00","relpermalink":"/zh/post/logistic-regression/","section":"post","summary":"理解逻辑回归中涉及的术语以及从最大似然到最小化代价函数","tags":["logistic-regression","逻辑回归"],"title":"逻辑回归（Logistic Regression）","type":"post"},{"authors":[],"categories":[],"content":"在git的日常使用中更改提交的作者名和邮箱是一个十分常见的操作。例如，当你克隆了一个项目，如果你没有进行任何设置，此时提交的作者和邮件将使用全局选项，这可能不是你所要的。\n通过本文你将了解：\n 如何配置git使用的提交者用户名和邮箱 如何更改最近一次提交的作者名和邮件 批量更改提交的作者名和邮件  配置提交者用户名和邮箱 你有两种方式进行设置，一是全局配置，二是为每个repo单独配置。\n全局地更改提交者用户名和邮箱 使用git config并--global选项进行全局设置，如下所示：\n$ git config --global user.name \u0026quot;Du Liqiang\u0026quot; $ git config --global user.email \u0026quot;dlq137@gmail.com\u0026quot;  设置完毕后，后续的提交将使用以上提供的信息。\n为某个repo单独配置 全局选项可能并不适用于某个repo，此时就需要单独设置，使用git config但省略--global选项，如下：\n$ git config user.name \u0026quot;Du Liqiang\u0026quot; $ git config user.email \u0026quot;dlq137@gmail.com\u0026quot;  这里的设置将覆盖全局选项，并且只应用于当前的repo。\n更改最近一次提交的作者用户名和邮箱 如果你刚做了一次提交，发现用户名和邮箱并不是所要的，你可以使用--amend选项重新提交：\n$ git commit --amend --author=\u0026quot;Du Liqiang \u0026lt;dlq137@gmail.com\u0026gt;\u0026quot;  更改多次提交的作者用户名和邮箱 这个时候我们需要借助强大的rebase命令，首先我们找到上一次“好”的提交1，并假设其提交hash为0ad14fa5，执行：\n$ git rebase -i -p 0ad14fa5  此时我们会进入一个编辑器，将那些需要编辑的提交全标记为edit，接下来git会指导你完成每次提交的编辑，你需要做的就是执行：\n$ git commit --amend --author=\u0026quot;Du Liqiang \u0026lt;dlq137@gmail.com\u0026gt; --no-edit $ git rebase --continue  使用git filter-branch批量更改 除了以上交互式的更改方法，另一种方法是借助git的filter-branch命令，其允许你使用一个script批量处理大量的提交。\n如下命令筛选提交邮箱为WRONG_EMAIL的提交，并将其用户名和邮箱分别设置为NEW_NAME和NEW_EMAIL对应的值。\n$ git filter-branch --env-filter ' WRONG_EMAIL=\u0026quot;wrong@example.com\u0026quot; NEW_NAME=\u0026quot;New Name Value\u0026quot; NEW_EMAIL=\u0026quot;correct@example.com\u0026quot; if [ \u0026quot;$GIT_COMMITTER_EMAIL\u0026quot; = \u0026quot;$WRONG_EMAIL\u0026quot; ] then export GIT_COMMITTER_NAME=\u0026quot;$NEW_NAME\u0026quot; export GIT_COMMITTER_EMAIL=\u0026quot;$NEW_EMAIL\u0026quot; fi if [ \u0026quot;$GIT_AUTHOR_EMAIL\u0026quot; = \u0026quot;$WRONG_EMAIL\u0026quot; ] then export GIT_AUTHOR_NAME=\u0026quot;$NEW_NAME\u0026quot; export GIT_AUTHOR_EMAIL=\u0026quot;$NEW_EMAIL\u0026quot; fi ' --tag-name-filter cat -- --branches --tags  参考  https://www.git-tower.com/learn/git/faq/change-author-name-email    该次提交之前的提交具有正确的用户名和邮箱，其后的需要进行更改。 \u0026#x21a9;\u0026#xfe0e;\n  ","date":1573120043,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1573120043,"objectID":"9f6fd127ef1ad95f23bfd5dc1c97aaa2","permalink":"https://keris.github.io/zh/post/change-author-name-email/","publishdate":"2019-11-07T17:47:23+08:00","relpermalink":"/zh/post/change-author-name-email/","section":"post","summary":"在git的日常使用中更改提交的作者名和邮箱是一个十分常见的操作。例如，当你克隆了一个项目，如果你没有进行任何设置，此时提交的作者和邮件将使用全局选项，这可能不是你所要的。\n","tags":["git","change-author"],"title":"更改git提交中的作者和邮件信息","type":"post"}]